import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
/**
 * Contains information about the job.
 */
export declare class Job extends pulumi.CustomResource {
    /**
     * Get an existing Job resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Job;
    /**
     * Returns true if the given object is an instance of Job.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Job;
    /**
     * Specifies the settings for Caffe job.
     */
    readonly caffeSettings: pulumi.Output<outputs.batchai.v20170901preview.CaffeSettingsResponse | undefined>;
    /**
     * Specifies the settings for Chainer job.
     */
    readonly chainerSettings: pulumi.Output<outputs.batchai.v20170901preview.ChainerSettingsResponse | undefined>;
    /**
     * Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
     */
    readonly cluster: pulumi.Output<outputs.batchai.v20170901preview.ResourceIdResponse | undefined>;
    /**
     * Specifies the settings for CNTK (aka Microsoft Cognitive Toolkit) job.
     */
    readonly cntkSettings: pulumi.Output<outputs.batchai.v20170901preview.CNTKsettingsResponse | undefined>;
    /**
     * Constraints associated with the Job.
     */
    readonly constraints: pulumi.Output<outputs.batchai.v20170901preview.JobPropertiesResponseConstraints | undefined>;
    /**
     * If the container was downloaded as part of cluster setup then the same container image will be used. If not provided, the job will run on the VM.
     */
    readonly containerSettings: pulumi.Output<outputs.batchai.v20170901preview.ContainerSettingsResponse | undefined>;
    /**
     * The creation time of the job.
     */
    readonly creationTime: pulumi.Output<string>;
    /**
     * Specifies the settings for a custom tool kit job.
     */
    readonly customToolkitSettings: pulumi.Output<outputs.batchai.v20170901preview.CustomToolkitSettingsResponse | undefined>;
    /**
     * Batch AI services sets the following environment variables for all jobs: AZ_BATCHAI_INPUT_id, AZ_BATCHAI_OUTPUT_id, AZ_BATCHAI_NUM_GPUS_PER_NODE, For distributed TensorFlow jobs, following additional environment variables are set by the Batch AI Service: AZ_BATCHAI_PS_HOSTS, AZ_BATCHAI_WORKER_HOSTS.
     */
    readonly environmentVariables: pulumi.Output<outputs.batchai.v20170901preview.EnvironmentSettingResponse[] | undefined>;
    /**
     * Contains information about the execution of a job in the Azure Batch service.
     */
    readonly executionInfo: pulumi.Output<outputs.batchai.v20170901preview.JobPropertiesResponseExecutionInfo | undefined>;
    /**
     * The current state of the job. Possible values are: queued - The job is queued and able to run. A job enters this state when it is created, or when it is awaiting a retry after a failed run. running - The job is running on a compute cluster. This includes job-level preparation such as downloading resource files or set up container specified on the job - it does not necessarily mean that the job command line has started executing. terminating - The job is terminated by the user, the terminate operation is in progress. succeeded - The job has completed running successfully and exited with exit code 0. failed - The job has finished unsuccessfully (failed with a non-zero exit code) and has exhausted its retry limit. A job is also marked as failed if an error occurred launching the job.
     */
    readonly executionState: pulumi.Output<string | undefined>;
    /**
     * The time at which the job entered its current execution state.
     */
    readonly executionStateTransitionTime: pulumi.Output<string>;
    /**
     * Describe the experiment information of the job
     */
    readonly experimentName: pulumi.Output<string | undefined>;
    readonly inputDirectories: pulumi.Output<outputs.batchai.v20170901preview.InputDirectoryResponse[] | undefined>;
    /**
     * The specified actions will run on all the nodes that are part of the job
     */
    readonly jobPreparation: pulumi.Output<outputs.batchai.v20170901preview.JobPreparationResponse | undefined>;
    /**
     * The location of the resource
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * The job will be gang scheduled on that many compute nodes
     */
    readonly nodeCount: pulumi.Output<number | undefined>;
    readonly outputDirectories: pulumi.Output<outputs.batchai.v20170901preview.OutputDirectoryResponse[] | undefined>;
    /**
     * Priority associated with the job. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. The default value is 0.
     */
    readonly priority: pulumi.Output<number | undefined>;
    /**
     * The provisioned state of the Batch AI job
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * The time at which the job entered its current provisioning state.
     */
    readonly provisioningStateTransitionTime: pulumi.Output<string>;
    /**
     * The path where the Batch AI service will upload stdout and stderror of the job.
     */
    readonly stdOutErrPathPrefix: pulumi.Output<string | undefined>;
    /**
     * The tags of the resource
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    }>;
    /**
     * Specifies the settings for TensorFlow job.
     */
    readonly tensorFlowSettings: pulumi.Output<outputs.batchai.v20170901preview.TensorFlowSettingsResponse | undefined>;
    /**
     * Possible values are: cntk, tensorflow, caffe, caffe2, chainer, custom.
     */
    readonly toolType: pulumi.Output<string | undefined>;
    /**
     * The type of the resource
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a Job resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: JobArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Job resource.
 */
export interface JobArgs {
    /**
     * Specifies the settings for Caffe2 job.
     */
    readonly caffe2Settings?: pulumi.Input<inputs.batchai.v20170901preview.Caffe2SettingsArgs>;
    /**
     * Specifies the settings for Caffe job.
     */
    readonly caffeSettings?: pulumi.Input<inputs.batchai.v20170901preview.CaffeSettingsArgs>;
    /**
     * Specifies the settings for Chainer job.
     */
    readonly chainerSettings?: pulumi.Input<inputs.batchai.v20170901preview.ChainerSettingsArgs>;
    /**
     * Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
     */
    readonly cluster: pulumi.Input<inputs.batchai.v20170901preview.ResourceIdArgs>;
    /**
     * Specifies the settings for CNTK (aka Microsoft Cognitive Toolkit) job.
     */
    readonly cntkSettings?: pulumi.Input<inputs.batchai.v20170901preview.CNTKsettingsArgs>;
    /**
     * Constraints associated with the Job.
     */
    readonly constraints?: pulumi.Input<inputs.batchai.v20170901preview.JobBasePropertiesConstraintsArgs>;
    /**
     * If the container was downloaded as part of cluster setup then the same container image will be used. If not provided, the job will run on the VM.
     */
    readonly containerSettings?: pulumi.Input<inputs.batchai.v20170901preview.ContainerSettingsArgs>;
    /**
     * Specifies the settings for a custom tool kit job.
     */
    readonly customToolkitSettings?: pulumi.Input<inputs.batchai.v20170901preview.CustomToolkitSettingsArgs>;
    /**
     * Batch AI service sets the following environment variables for all jobs: AZ_BATCHAI_INPUT_id, AZ_BATCHAI_OUTPUT_id, AZ_BATCHAI_NUM_GPUS_PER_NODE. For distributed TensorFlow jobs, following additional environment variables are set by the Batch AI Service: AZ_BATCHAI_PS_HOSTS, AZ_BATCHAI_WORKER_HOSTS
     */
    readonly environmentVariables?: pulumi.Input<pulumi.Input<inputs.batchai.v20170901preview.EnvironmentSettingArgs>[]>;
    /**
     * Describe the experiment information of the job
     */
    readonly experimentName?: pulumi.Input<string>;
    readonly inputDirectories?: pulumi.Input<pulumi.Input<inputs.batchai.v20170901preview.InputDirectoryArgs>[]>;
    /**
     * The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long.
     */
    readonly jobName?: pulumi.Input<string>;
    /**
     * The specified actions will run on all the nodes that are part of the job
     */
    readonly jobPreparation?: pulumi.Input<inputs.batchai.v20170901preview.JobPreparationArgs>;
    /**
     * The region in which to create the job.
     */
    readonly location?: pulumi.Input<string>;
    /**
     * The job will be gang scheduled on that many compute nodes
     */
    readonly nodeCount: pulumi.Input<number>;
    readonly outputDirectories?: pulumi.Input<pulumi.Input<inputs.batchai.v20170901preview.OutputDirectoryArgs>[]>;
    /**
     * Priority associated with the job. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. The default value is 0.
     */
    readonly priority?: pulumi.Input<number>;
    /**
     * Name of the resource group to which the resource belongs.
     */
    readonly resourceGroupName: pulumi.Input<string>;
    /**
     * The path where the Batch AI service will upload stdout and stderror of the job.
     */
    readonly stdOutErrPathPrefix: pulumi.Input<string>;
    /**
     * The user specified tags associated with the job.
     */
    readonly tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Specifies the settings for TensorFlow job.
     */
    readonly tensorFlowSettings?: pulumi.Input<inputs.batchai.v20170901preview.TensorFlowSettingsArgs>;
}
