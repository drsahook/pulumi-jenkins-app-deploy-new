import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
/**
 * Result of the request to list networkManagerEffectiveConfiguration. It contains a list of groups and a URL link to get the next set of results.
 */
export declare function listEffectiveConfiguration(args: ListEffectiveConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<ListEffectiveConfigurationResult>;
export interface ListEffectiveConfigurationArgs {
    /**
     * The name of the resource group.
     */
    readonly resourceGroupName: string;
    /**
     * When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.
     */
    readonly skipToken?: string;
    /**
     * The name of the virtual network.
     */
    readonly virtualNetworkName: string;
}
/**
 * Result of the request to list networkManagerEffectiveConfiguration. It contains a list of groups and a URL link to get the next set of results.
 */
export interface ListEffectiveConfigurationResult {
    /**
     * When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.
     */
    readonly skipToken?: string;
    /**
     * Gets a page of NetworkManagerEffectiveConfiguration
     */
    readonly value?: outputs.network.v20210201preview.EffectiveConnectivityConfigurationResponse | outputs.network.v20210201preview.SecurityAdminRuleCollectionResponse | outputs.network.v20210201preview.SecurityUserRuleCollectionResponse[];
}
