import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
/**
 * Result of the request to list Effective Virtual Network. It contains a list of groups and a URL link to get the next set of results.
 */
export declare function listEffectiveVirtualNetworkByNetworkManager(args: ListEffectiveVirtualNetworkByNetworkManagerArgs, opts?: pulumi.InvokeOptions): Promise<ListEffectiveVirtualNetworkByNetworkManagerResult>;
export interface ListEffectiveVirtualNetworkByNetworkManagerArgs {
    /**
     * Conditional Members.
     */
    readonly conditionalMembers?: string;
    /**
     * The name of the network manager.
     */
    readonly networkManagerName: string;
    /**
     * The name of the resource group.
     */
    readonly resourceGroupName: string;
    /**
     * Continuation token for pagination, capturing the next page size and offset, as well as the context of the query.
     */
    readonly skipToken?: string;
    /**
     * An optional query parameter which specifies the maximum number of records to be returned by the server.
     */
    readonly top?: number;
}
/**
 * Result of the request to list Effective Virtual Network. It contains a list of groups and a URL link to get the next set of results.
 */
export interface ListEffectiveVirtualNetworkByNetworkManagerResult {
    /**
     * When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.
     */
    readonly skipToken?: string;
    /**
     * Gets a page of EffectiveVirtualNetwork
     */
    readonly value?: outputs.network.v20210201preview.EffectiveVirtualNetworkResponse[];
}
