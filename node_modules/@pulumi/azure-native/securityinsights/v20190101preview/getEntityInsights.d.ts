import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
/**
 * The Get Insights result operation response.
 */
export declare function getEntityInsights(args: GetEntityInsightsArgs, opts?: pulumi.InvokeOptions): Promise<GetEntityInsightsResult>;
export interface GetEntityInsightsArgs {
    /**
     * Indicates if query time range should be extended with default time range of the query. Default value is false
     */
    readonly addDefaultExtendedTimeRange?: boolean;
    /**
     * The end timeline date, so the results returned are before this date.
     */
    readonly endTime: string;
    /**
     * entity ID
     */
    readonly entityId: string;
    /**
     * List of Insights Query Id. If empty, default value is all insights of this entity
     */
    readonly insightQueryIds?: string[];
    /**
     * The namespace of workspaces resource provider- Microsoft.OperationalInsights.
     */
    readonly operationalInsightsResourceProvider: string;
    /**
     * The name of the resource group within the user's subscription. The name is case insensitive.
     */
    readonly resourceGroupName: string;
    /**
     * The start timeline date, so the results returned are after this date.
     */
    readonly startTime: string;
    /**
     * The name of the workspace.
     */
    readonly workspaceName: string;
}
/**
 * The Get Insights result operation response.
 */
export interface GetEntityInsightsResult {
    /**
     * The metadata from the get insights operation results.
     */
    readonly metaData?: outputs.securityinsights.v20190101preview.GetInsightsResultsMetadataResponse;
    /**
     * The insights result values.
     */
    readonly value?: outputs.securityinsights.v20190101preview.EntityInsightItemResponse[];
}
