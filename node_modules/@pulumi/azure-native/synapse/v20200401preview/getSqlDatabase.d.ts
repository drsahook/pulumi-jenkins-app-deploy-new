import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
/**
 * A sql database resource.
 */
export declare function getSqlDatabase(args: GetSqlDatabaseArgs, opts?: pulumi.InvokeOptions): Promise<GetSqlDatabaseResult>;
export interface GetSqlDatabaseArgs {
    /**
     * The name of the resource group. The name is case insensitive.
     */
    readonly resourceGroupName: string;
    /**
     * The name of the sql database.
     */
    readonly sqlDatabaseName: string;
    /**
     * The name of the workspace.
     */
    readonly workspaceName: string;
}
/**
 * A sql database resource.
 */
export interface GetSqlDatabaseResult {
    /**
     * The collation of the database.
     */
    readonly collation?: string;
    /**
     * The Guid of the database.
     */
    readonly databaseGuid: string;
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * The geo-location where the resource lives
     */
    readonly location: string;
    /**
     * The max size of the database expressed in bytes.
     */
    readonly maxSizeBytes?: number;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * Status of the database.
     */
    readonly status: string;
    /**
     * SystemData of SqlDatabase.
     */
    readonly systemData: outputs.synapse.v20200401preview.SystemDataResponse;
    /**
     * Resource tags.
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}
