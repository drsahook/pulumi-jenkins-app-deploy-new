"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__exportStar(require("./addon"), exports);
__exportStar(require("./bandwidthSchedule"), exports);
__exportStar(require("./container"), exports);
__exportStar(require("./device"), exports);
__exportStar(require("./getAddon"), exports);
__exportStar(require("./getBandwidthSchedule"), exports);
__exportStar(require("./getContainer"), exports);
__exportStar(require("./getDevice"), exports);
__exportStar(require("./getDeviceExtendedInformation"), exports);
__exportStar(require("./getMonitoringConfig"), exports);
__exportStar(require("./getOrder"), exports);
__exportStar(require("./getRole"), exports);
__exportStar(require("./getShare"), exports);
__exportStar(require("./getStorageAccount"), exports);
__exportStar(require("./getStorageAccountCredential"), exports);
__exportStar(require("./getTrigger"), exports);
__exportStar(require("./getUser"), exports);
__exportStar(require("./listOrderDCAccessCode"), exports);
__exportStar(require("./monitoringConfig"), exports);
__exportStar(require("./order"), exports);
__exportStar(require("./role"), exports);
__exportStar(require("./share"), exports);
__exportStar(require("./storageAccount"), exports);
__exportStar(require("./storageAccountCredential"), exports);
__exportStar(require("./trigger"), exports);
__exportStar(require("./user"), exports);
// Export enums:
__exportStar(require("../../types/enums/databoxedge/v20210201preview"), exports);
// Import resources to register:
const addon_1 = require("./addon");
const bandwidthSchedule_1 = require("./bandwidthSchedule");
const container_1 = require("./container");
const device_1 = require("./device");
const monitoringConfig_1 = require("./monitoringConfig");
const order_1 = require("./order");
const role_1 = require("./role");
const share_1 = require("./share");
const storageAccount_1 = require("./storageAccount");
const storageAccountCredential_1 = require("./storageAccountCredential");
const trigger_1 = require("./trigger");
const user_1 = require("./user");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:databoxedge/v20210201preview:Addon":
                return new addon_1.Addon(name, undefined, { urn });
            case "azure-native:databoxedge/v20210201preview:BandwidthSchedule":
                return new bandwidthSchedule_1.BandwidthSchedule(name, undefined, { urn });
            case "azure-native:databoxedge/v20210201preview:Container":
                return new container_1.Container(name, undefined, { urn });
            case "azure-native:databoxedge/v20210201preview:Device":
                return new device_1.Device(name, undefined, { urn });
            case "azure-native:databoxedge/v20210201preview:MonitoringConfig":
                return new monitoringConfig_1.MonitoringConfig(name, undefined, { urn });
            case "azure-native:databoxedge/v20210201preview:Order":
                return new order_1.Order(name, undefined, { urn });
            case "azure-native:databoxedge/v20210201preview:Role":
                return new role_1.Role(name, undefined, { urn });
            case "azure-native:databoxedge/v20210201preview:Share":
                return new share_1.Share(name, undefined, { urn });
            case "azure-native:databoxedge/v20210201preview:StorageAccount":
                return new storageAccount_1.StorageAccount(name, undefined, { urn });
            case "azure-native:databoxedge/v20210201preview:StorageAccountCredential":
                return new storageAccountCredential_1.StorageAccountCredential(name, undefined, { urn });
            case "azure-native:databoxedge/v20210201preview:Trigger":
                return new trigger_1.Trigger(name, undefined, { urn });
            case "azure-native:databoxedge/v20210201preview:User":
                return new user_1.User(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "databoxedge/v20210201preview", _module);
//# sourceMappingURL=index.js.map