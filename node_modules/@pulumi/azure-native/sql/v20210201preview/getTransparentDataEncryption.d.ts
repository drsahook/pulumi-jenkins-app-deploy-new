import * as pulumi from "@pulumi/pulumi";
/**
 * A logical database transparent data encryption state.
 */
export declare function getTransparentDataEncryption(args: GetTransparentDataEncryptionArgs, opts?: pulumi.InvokeOptions): Promise<GetTransparentDataEncryptionResult>;
export interface GetTransparentDataEncryptionArgs {
    /**
     * The name of the logical database for which the transparent data encryption is defined.
     */
    readonly databaseName: string;
    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     */
    readonly resourceGroupName: string;
    /**
     * The name of the server.
     */
    readonly serverName: string;
    /**
     * The name of the transparent data encryption configuration.
     */
    readonly tdeName: string;
}
/**
 * A logical database transparent data encryption state.
 */
export interface GetTransparentDataEncryptionResult {
    /**
     * Resource ID.
     */
    readonly id: string;
    /**
     * Resource name.
     */
    readonly name: string;
    /**
     * Specifies the state of the transparent data encryption.
     */
    readonly state: string;
    /**
     * Resource type.
     */
    readonly type: string;
}
