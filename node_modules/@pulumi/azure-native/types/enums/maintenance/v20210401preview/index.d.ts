export declare const MaintenanceScope: {
    readonly Host: "Host";
    readonly OSImage: "OSImage";
    readonly Extension: "Extension";
    readonly InGuestPatch: "InGuestPatch";
    readonly SQLDB: "SQLDB";
    readonly SQLManagedInstance: "SQLManagedInstance";
};
/**
 * Gets or sets maintenanceScope of the configuration
 */
export declare type MaintenanceScope = (typeof MaintenanceScope)[keyof typeof MaintenanceScope];
export declare const RebootOptions: {
    readonly NeverReboot: "NeverReboot";
    readonly RebootIfRequired: "RebootIfRequired";
    readonly AlwaysReboot: "AlwaysReboot";
};
/**
 * Possible reboot preference as defined by the user based on which it would be decided to reboot the machine or not after the patch operation is completed.
 */
export declare type RebootOptions = (typeof RebootOptions)[keyof typeof RebootOptions];
export declare const TaskScope: {
    readonly Global: "Global";
    readonly Resource: "Resource";
};
/**
 * Global Task execute once when schedule trigger. Resource task execute for each VM.
 */
export declare type TaskScope = (typeof TaskScope)[keyof typeof TaskScope];
export declare const Visibility: {
    readonly Custom: "Custom";
    readonly Public: "Public";
};
/**
 * Gets or sets the visibility of the configuration
 */
export declare type Visibility = (typeof Visibility)[keyof typeof Visibility];
