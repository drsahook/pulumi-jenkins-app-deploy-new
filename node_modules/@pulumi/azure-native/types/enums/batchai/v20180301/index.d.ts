export declare const CachingType: {
    readonly None: "none";
    readonly Readonly: "readonly";
    readonly Readwrite: "readwrite";
};
export declare type CachingType = (typeof CachingType)[keyof typeof CachingType];
export declare const DeallocationOption: {
    readonly Requeue: "requeue";
    readonly Terminate: "terminate";
    readonly Waitforjobcompletion: "waitforjobcompletion";
    readonly Unknown: "unknown";
};
/**
 * The default value is requeue.
 */
export declare type DeallocationOption = (typeof DeallocationOption)[keyof typeof DeallocationOption];
export declare const OutputType: {
    readonly Model: "model";
    readonly Logs: "logs";
    readonly Summary: "summary";
    readonly Custom: "custom";
};
/**
 * Default value is Custom. The possible values are Model, Logs, Summary, and Custom. Users can use multiple enums for a single directory. Eg. outPutType='Model,Logs, Summary'
 */
export declare type OutputType = (typeof OutputType)[keyof typeof OutputType];
export declare const StorageAccountType: {
    readonly Standard_LRS: "Standard_LRS";
    readonly Premium_LRS: "Premium_LRS";
};
export declare type StorageAccountType = (typeof StorageAccountType)[keyof typeof StorageAccountType];
export declare const VmPriority: {
    readonly Dedicated: "dedicated";
    readonly Lowpriority: "lowpriority";
};
/**
 * Default is dedicated.
 */
export declare type VmPriority = (typeof VmPriority)[keyof typeof VmPriority];
